@model DevToolKit.Models.PasswordGeneratorViewModel
@{
    ViewData["Title"] = "Password Generator";
}
<div class="max-w-xl mx-auto py-8">
    <h1 class="text-2xl font-bold mb-4">Password Generator</h1>
    <form method="post" class="space-y-4">
        <div class="flex gap-4 items-center flex-wrap">
            <label>Length:</label>
            <input type="number" name="Length" min="1" max="100" value="@Model?.Length" class="w-24 rounded border-gray-300 dark:bg-gray-800 dark:text-gray-100" />
            <label><input type="checkbox" name="UseNumbers" value="true" @(Model?.UseNumbers == true ? "checked" : null) /> Numbers</label>
            <label><input type="checkbox" name="UseLower" value="true" @(Model?.UseLower == true ? "checked" : null) /> Lowercase</label>
            <label><input type="checkbox" name="UseUpper" value="true" @(Model?.UseUpper == true ? "checked" : null) /> Uppercase</label>
            <label><input type="checkbox" name="UseSymbols" value="true" @(Model?.UseSymbols == true ? "checked" : null) /> Symbols</label>
        </div>
        <button type="submit" class="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700">Generate</button>
    </form>
    @if (!string.IsNullOrEmpty(Model?.Result))
    {
        <div class="mt-6">
            <div class="flex items-center justify-between mb-1">
                <label class="font-semibold">Password</label>
                <button type="button" onclick="navigator.clipboard.writeText(document.getElementById('password-output').value)" class="text-xs px-2 py-1 bg-gray-200 dark:bg-gray-700 rounded hover:bg-blue-100 dark:hover:bg-blue-900">Copy</button>
            </div>
            <input id="password-output" type="text" readonly class="w-full rounded border-gray-300 dark:bg-gray-800 dark:text-gray-100" value="@Model.Result" />
        </div>
    }
</div> 