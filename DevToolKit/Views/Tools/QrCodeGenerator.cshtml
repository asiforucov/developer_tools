@model DevToolKit.Models.QrCodeGeneratorViewModel
@{
    ViewData["Title"] = "QR Code Generator";
}
<div class="max-w-md mx-auto py-8">
    <h1 class="text-2xl font-bold mb-4">QR Code Generator</h1>
    <form method="post" class="space-y-4">
        <input type="text" name="Input" class="w-full rounded border-gray-300 dark:bg-gray-800 dark:text-gray-100" placeholder="Enter text to encode as QR..." value="@Model?.Input" />
        <button type="submit" class="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700">Generate</button>
    </form>
    @if (!string.IsNullOrEmpty(Model?.QrCodeDataUrl))
    {
        <div class="mt-8 flex flex-col items-center gap-4">
            <img id="qr-img" src="@Model.QrCodeDataUrl" alt="QR Code" class="w-56 h-56 bg-white rounded shadow border-2 border-blue-200 dark:border-blue-700" />
            <button type="button" onclick="downloadQr()" class="px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700">Download PNG</button>
            <span class="text-xs text-gray-500">(Preview)</span>
        </div>
        <script>
        function downloadQr() {
            const img = document.getElementById('qr-img');
            const link = document.createElement('a');
            link.href = img.src;
            link.download = 'qrcode.png';
            link.click();
        }
        </script>
    }
    else if (Model != null && string.IsNullOrEmpty(Model.QrCodeDataUrl))
    {
        <div class="mt-6 text-red-600">Could not generate QR code.</div>
    }
</div> 